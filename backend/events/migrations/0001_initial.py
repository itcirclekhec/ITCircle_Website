# Generated by Django 5.2.6 on 2025-09-29 22:23

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=250, unique=True)),
                ('description', models.TextField()),
                ('category', models.CharField(choices=[('workshop', 'Workshop'), ('hackathon', 'Hackathon'), ('seminar', 'Seminar'), ('competition', 'Competition'), ('meetup', 'Meetup')], max_length=20)),
                ('level', models.CharField(choices=[('beginner', 'Beginner'), ('intermediate', 'Intermediate'), ('advanced', 'Advanced'), ('all', 'All Levels')], default='all', max_length=20)),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('published', 'Published'), ('ongoing', 'Ongoing'), ('completed', 'Completed'), ('cancelled', 'Cancelled')], default='draft', max_length=20)),
                ('event_date', models.DateField()),
                ('event_time', models.TimeField()),
                ('duration', models.CharField(help_text='e.g., 2 hours, 3 days', max_length=50)),
                ('location', models.CharField(max_length=200)),
                ('is_online', models.BooleanField(default=False)),
                ('meeting_link', models.URLField(blank=True, null=True)),
                ('image', models.URLField(blank=True, null=True)),
                ('speaker', models.CharField(max_length=200)),
                ('speaker_bio', models.TextField(blank=True, null=True)),
                ('max_attendees', models.IntegerField(default=50)),
                ('registration_deadline', models.DateTimeField(blank=True, null=True)),
                ('requires_approval', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='created_events', to=settings.AUTH_USER_MODEL)),
                ('organizer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='organized_events', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'events',
                'ordering': ['-event_date', '-event_time'],
            },
        ),
        migrations.CreateModel(
            name='EventRegistration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected'), ('cancelled', 'Cancelled'), ('attended', 'Attended')], default='approved', max_length=20)),
                ('notes', models.TextField(blank=True, null=True)),
                ('attended', models.BooleanField(default=False)),
                ('registered_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='registrations', to='events.event')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='event_registrations', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'event_registrations',
                'ordering': ['-registered_at'],
                'unique_together': {('event', 'user')},
            },
        ),
        migrations.CreateModel(
            name='EventTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.CharField(max_length=50)),
                ('event', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='events.event')),
            ],
            options={
                'db_table': 'event_tags',
                'unique_together': {('event', 'tag')},
            },
        ),
    ]
